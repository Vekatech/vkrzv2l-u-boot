// SPDX-License-Identifier: GPL-2.0
/*
 * Device Tree Source for the VK-RZV2L board
 *
 * Copyright (C) 2017 Jacopo Mondi <jacopo+renesas@jmondi.org>
 * Copyright (C) 2016 Renesas Electronics
 */

/dts-v1/;
#include <dt-bindings/gpio/gpio.h>
#include "r9a07g054l.dtsi"
#include "r9a07g054l-u-boot.dtsi"
#include <dt-bindings/pinctrl/rzv2l-pinctrl.h>

/ {
        model = "Vekatech vkrzv2l";
        compatible = "renesas,r9a07g054l", "renesas,rzv2l";

        aliases {
                serial0 = &scif0;
                serial1 = &scif1;
                serial2 = &scif2;
                serial3 = &scif3;
                spi0 = &spibsc;
        };

        chosen {
                stdout-path = "serial0:115200n8";
        };

        memory@48000000 {
                device_type = "memory";
                /* first 128MB is reserved for secure area. */
                reg = <0 0x48000000 0 0x78000000>;
        };


        usb0-select {
                label = "usb0-sel";
                gpios = <&P5 2 GPIO_ACTIVE_HIGH>;
        };

};

&pinctrl {
        eth0_pins: eth0 {
                pinmux = <RZV2L_PINMUX(20, 0, 1)>,
                                <RZV2L_PINMUX(20, 1, 1)>,
                                <RZV2L_PINMUX(20, 2, 1)>,
                                <RZV2L_PINMUX(21, 0, 1)>,
                                <RZV2L_PINMUX(21, 1, 1)>,
                                <RZV2L_PINMUX(22, 0, 1)>,
                                <RZV2L_PINMUX(23, 0, 1)>,
                                <RZV2L_PINMUX(23, 1, 1)>,
                                <RZV2L_PINMUX(24, 0, 1)>,
                                <RZV2L_PINMUX(24, 1, 1)>,
                                <RZV2L_PINMUX(25, 0, 1)>,
                                <RZV2L_PINMUX(25, 1, 1)>,
                                <RZV2L_PINMUX(26, 0, 1)>,
                                <RZV2L_PINMUX(26, 1, 1)>,
                                <RZV2L_PINMUX(27, 0, 1)>,
                                <RZV2L_PINMUX(27, 1, 1)>,
                                <RZV2L_PINMUX(28, 0, 1)>,
                                <RZV2L_PINMUX(28, 1, 1)>;
        };

        i2c2_pins: i2c2 {
                pinmux = <RZV2L_PINMUX(46, 0, 4)>,
                         <RZV2L_PINMUX(46, 1, 4)>;
        }; 

        i2c3_pins: i2c3 {
                pinmux = <RZV2L_PINMUX(18, 0, 3)>,
                         <RZV2L_PINMUX(18, 1, 3)>;
        }; 

        scif1_pins: scif1 {
                pinmux = <RZV2L_PINMUX(40, 0, 1)>,
                         <RZV2L_PINMUX(40, 1, 1)>;
        };

        scif2_pins: scif2 {
                pinmux = <RZV2L_PINMUX(48, 0, 1)>,
                         <RZV2L_PINMUX(48, 1, 1)>;
        };

        scif3_pins: scif3 {
                pinmux = <RZV2L_PINMUX(0, 0, 4)>,
                         <RZV2L_PINMUX(0, 1, 4)>;
        };
};

&xinclk {
        clock-frequency = <24000000>;
};

&scif0 {
        status = "okay";
        clock = <100000000>;
};

&scif1 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif1_pins>;

        status = "okay";
};

&scif2 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif2_pins>;

        status = "okay";
};


&scif3 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif3_pins>;

        status = "okay";
};

&sdhi0 {
        /* pinctrl placeholder
         * If this channel is used for interfacing with a SD card, a power enable
         * pin (SD0_PWR_EN) must be defined.
         * The SD0_PWR_EN pin is associated with P19_0.
         * A HIGH signal on SD0_PWR_EN will enable supply voltage for SD card.
        */
        bus-width = <4>;
        status = "okay";
};

&eth0 {
        pinctrl-names = "default";
        pinctrl-0 = <&eth0_pins>;
        phy-handle = <&phy0>;
        phy-mode = "rgmii-id";
        status = "okay";

        phy0: ethernet-phy@1 {
                reg = <1>;
        };
};

&ehci0 {
        status = "okay";
}; 

&ehci1 {
        status = "okay";
};


&i2c0 {
        pinctrl-names = "default";
        status = "okay";
};

&i2c1 {
        pinctrl-names = "default";
        status = "okay";
};


&i2c2 {
        pinctrl-0 = <&i2c2_pins>;
        pinctrl-names = "default";
        status = "okay";
};

&i2c3 {
        pinctrl-0 = <&i2c3_pins>;
        pinctrl-names = "default";
        status = "okay";

        versa3: versa3@68 {
                compatible = "renesas,5p35023";
                reg = <0x68>;
                #clock-cells = <1>;
                clocks = <&xinclk>;
                clock-names = "x1";
                renesas,settings = [
                 00 00 11 19 00 42 cc 2b 04 32 00 1a 5f 12 90 79
                 02 4c 00 00 00 00 00 00 10 24 19 bf 3f 30 90 86
                 80 b2 05 c4 9c 
                ];
                assigned-clocks = <&versa3 0>,
                                  <&versa3 1>,
                                  <&versa3 2>,
                                  <&versa3 3>,
                                  <&versa3 4>,
                                  <&versa3 5>;
                assigned-clock-rates = <12288000>, <25000000>,
                                       <25000000>, <12288000>,
                                       <11289600>, <24000000>;
        };
};

&spibsc {
        num-cs = <1>;
        status = "okay";
        spi-max-frequency = <40000000>;
        #address-cells = <1>;
        #size-cells = <0>;
        flash0: spi-flash@0 {
                #address-cells = <1>;
                #size-cells = <1>;
                compatible = "spi-flash", "jedec,spi-nor";
                spi-max-frequency = <40000000>;
                spi-tx-bus-width = <1>;
                spi-rx-bus-width = <1>;
                reg = <0>;
                status = "okay";
        };
};
